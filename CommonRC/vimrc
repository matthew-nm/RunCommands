" source /blah/blah/vimrc

" Theme
" set termguicolors
" set background=dark
colorscheme adventurous
let g:airline_theme='distinguished'
" fixes
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set t_Co=256

" General
set autoindent
set nocompatible
"set colorcolumn=85
"set cursorcolumn
set cursorline
set display+=lastline
set encoding=utf-8
" set foldlevelstart=9
set hid  "hide buffers when abandoned
set hlsearch
set lazyredraw
set magic
set mouse+=a
set ttymouse=xterm2
set number
set pastetoggle=<F3>
set ruler
set scrolloff=7
set showcmd
set noshowmode
set term=xterm-256color
set ttyfast
set undodir=~/.undodir/
set undofile
set updatetime=500
set wildmenu
set wildmode=list:longest

" Search options
set hlsearch
set incsearch  "search as you type

" Set tab length to (2) / convert to spaces
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" Fix backspace
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Fillchars
set fillchars=vert:│,fold:—

" Redraw syntax highlighting w/ <F12> (in case of errors)
noremap <F12> <Esc>:syntax sync fromstart<cr> \| :GitGutter<cr>
inoremap <F12> <C-o>:syntax sync fromstart<cr> \| :GitGutter<cr>


" ----- <LEADER> ----- "

" Remap <leader> key
let mapleader = ","
let g:mapleader = ","

" Save
nmap <leader>w :w<cr>

" Quit
nmap <leader>q :qa<cr>

" V-split
nmap <leader>v :vsplit<cr>

" H-split
nmap <leader>V :split<cr>

" New tab
nmap <leader>t :tabnew<cr>

" Fold/unfold all
nmap <leader>z zA

" Turn off highlighting
nmap <leader><space> :noh<cr>

" Hide buffer
nmap <leader>h :hide<cr>

" Delete buffer
nmap <leader>d :bd<cr>

" Toggle NERDTree
nmap <silent> <leader>e :NERDTreeToggle<cr>

" Toggle tagbar
nmap <silent> <leader>E :TagbarToggle<cr>

" Toggle tabman
let g:tabman_toggle = '<leader>TT'

" New tabs
nmap <leader>T0 :$tabnew<cr>
nmap <leader>T$ :$tabnew<cr>

" fzf (fuzzy file finder)
nmap <leader>f :Files<cr>

" YouCompleteMe GoTo
nnoremap <leader>jd :YcmCompleter GoTo<cr>
nnoremap <leader>jr :YcmCompleter GoToReferences<cr>
nnoremap <silent> <leader>gt :YcmCompleter GetType<cr>
nnoremap <leader>gd :YcmCompleter GetDoc<cr>

" Tabularize
nmap <Leader>a= :Tabularize /=<cr>
vmap <Leader>a= :Tabularize /=<cr>
nmap <Leader>a: :Tabularize /:<cr>
vmap <Leader>a: :Tabularize /:<cr>
nmap <Leader>a<bar> :Tabularize /<bar><cr>
vmap <Leader>a<bar> :Tabularize /<bar><cr>

" Yankring, show
nmap <leader>p :YRShow<cr>

" Close all hidden buffers
nmap <leader>c :call CloseHiddenBuffers()<cr>

" Close all buffers (then, reopen NERDTree)
nmap <silent> <leader>C :%bd \| NERDTreeToggle<cr>

" Far.vim replace
nmap <leader>r :Farp<cr>
nmap <leader>R :Fardo<cr>

" Replace all instances of word under cusor
nmap <leader>s :ReplaceWordUnderCursor<cr>


" ----- EDITING / MOVEMENT ----- "

" Set up/down to work with wrapped lines
nnoremap k gk
nnoremap j gj
" And because I'm sloppy...
nnoremap K gk
nnoremap J gj

" Set jj to exit insert mode
inoremap jj <esc>

" Move to next lint error
map <silent> <F1> :ALENextWrap<cr>
map <silent> <F2> :ALEPreviousWrap<cr>

" Bind system clipboard
vnoremap <C-c> "+y

" Yank to tmux clipboard (vim-tbone)
nnoremap ty :Tyank<cr>
vnoremap ty :Tyank<cr>

" Fold level
nmap z1 :set foldlevel=1<cr>
nmap z2 :set foldlevel=2<cr>

" Sudo Save
"   To use this command, type :Sudow
"   Note: all custom commands must start uppercase
command Sudow w !sudo tee % >/dev/null

" Clean trailing whitespace
command! CleanWhitespace
  \ let b:bufview=winsaveview() |
  \ :%s/\s\+$//g                |
  \ :execute "normal \<C-O>"    |
  \ call winrestview(b:bufview) |
  \ :noh

" Replace all instances of word under cursor
command! ReplaceWordUnderCursor
  \ let b:bufview=winsaveview()                         |
  \ let b:foo=expand('<cword>')                         |
  \ :execute "let b:bar=input('Replace" b:foo "with ')" |
  \ :execute ":%s/\\<".b:foo."\\>/".b:bar."/g"          |
  \ :execute "?\\<".b:bar."\\>"                         |
  \ call winrestview(b:bufview)

" <CR>: close popup and save indent
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
  return (pumvisible() ? "\<C-y>" : "" ) . "\<CR>"
  " For no inserting <CR> key.
  "return pumvisible() ? "\<C-y>" : "\<CR>"
endfunction


" ----- CONTROL / SEARCH ----- "

" Change tmux windows w/ Ctrl+h/j/k/l -or- Ctrl+<ArrowKeys>
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <C-Left>  :TmuxNavigateLeft<cr>
nnoremap <silent> <C-Down>  :TmuxNavigateDown<cr>
nnoremap <silent> <C-Up>    :TmuxNavigateUp<cr>
nnoremap <silent> <C-Right> :TmuxNavigateRight<cr>
nnoremap <silent> <C-h>     :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j>     :TmuxNavigateDown<cr>
nnoremap <silent> <C-k>     :TmuxNavigateUp<cr>
nnoremap <silent> <C-l>     :TmuxNavigateRight<cr>
nnoremap <silent> <C-\>     :TmuxNavigatePrevious<cr>

" Map <space> to insensitive search
nmap <space> /\c
"nmap <space> :execute "/\\c".input('i/')<cr>

" Map <space><space> to word search
nmap <space><space> /\<\><Left><Left>
"nmap <space><space> :execute "/\\<".input('w/')."\\>"<cr>


" ----- BUFFERS / FILES ----- "

" Save on losing focus
" au FocusLost * :wa

" Write all buffers before navigating from vim to tmux pane
let g:tmux_navigator_save_on_switch = 2

" Store temporary files in a central location
let vimtmp = $HOME . '/.tmp/vim/' . getpid()
silent! call mkdir(vimtmp, "p", 0700)
let &backupdir=vimtmp
let &directory=vimtmp

" Close hidden buffers
function CloseHiddenBuffers()
  let open_buffers = []
  for i in range(tabpagenr('$'))
    call extend(open_buffers, tabpagebuflist(i + 1))
  endfor
  for num in range(1, bufnr("$") + 1)
    if buflisted(num) && index(open_buffers, num) == -1
      exec "bdelete ".num
    endif
  endfor
endfunction

" Set to auto read when a file is changed from the outside
set autoread
augroup checktime
    au!
    if !has("gui_running")
        "silent! necessary otherwise throws errors when using command
        "line window.
        autocmd BufEnter        * silent! checktime
        autocmd CursorHold      * silent! checktime
        autocmd CursorHoldI     * silent! checktime
        "These two _may_ slow things down. Remove if they do.
        autocmd CursorMoved     * silent! checktime
        autocmd CursorMovedI    * silent! checktime
    endif
augroup END


" ----- EDITING ENVIRONMENT ----- "

command! Changes
  \ :!git commit -am "Changes" && git push origin

command! Wrapon :set wrap
command! Wrapoff :set wrap!


" ----- FILETYPE SPECIFIC ----- "

" Disable auto comment insertion
autocmd FileType * setlocal fo-=c fo-=r fo-=o

" Don't wrap mid-word (for text files)
autocmd FileType text,markdown set linebreak

" Don't conceal (dont use indentLine plugin)
autocmd FileType json,markdown let indentLine_enabled=0

" Other...
autocmd FileType python hi pythonSpaceError ctermfg=none ctermbg=none
autocmd FileType json call ShowTrailingWhitespace#SetLocalExtraPattern(',\s$')


" ----- SYSTEM ----- "

" neovim interpreter
let g:python3_host_prog = expand('~/bin/python')


" ----- COLORS ----- "

hi Normal       ctermfg=195 ctermbg=233
hi Visual ctermbg=52
hi Comment      ctermfg=246
hi String       ctermfg=212

hi Folded       ctermfg=49 ctermbg=NONE
" hi IncSearch    ctermbg=214 cterm=underline
hi Search       ctermbg=214 cterm=none
hi Todo ctermfg=196 ctermbg=none cterm=none
hi Type cterm=none
hi Constant ctermfg=43
hi Identifier ctermfg=45
hi Special ctermfg=224
hi PreProc ctermfg=045
hi Statement ctermfg=198
hi Directory ctermfg=36
hi Conditional ctermfg=208
hi Operator ctermfg=45
hi Function ctermfg=191

hi TabLineSel ctermfg=36 ctermbg=none
hi TabLine ctermfg=245 ctermbg=none
hi TabLineFill ctermbg=none
hi Title ctermfg=045
"
hi MatchParen   ctermfg=196 ctermbg=NONE cterm=none
""hi MatchParen   ctermfg=226 ctermbg=NONE
"
hi LineNr       ctermbg=none
hi CursorLineNr ctermfg=214 ctermbg=235
hi CursorLine   ctermbg=235 cterm=NONE
" hi SignColumn   ctermbg=none ctermfg=none
hi VertSplit    ctermbg=none ctermfg=236

"hi CursorColumn ctermbg=235
"hi ColorColumn  ctermbg=235
"
""hi TabLine      ctermfg= ctermbg=
"hi TabLineSel   ctermfg=015 ctermbg=000
"hi TabLineFill  ctermfg=235

" ale (linter engine)
hi ALEErrorSign   ctermbg=none ctermfg=160
hi ALEWarningSign ctermbg=none ctermfg=178

" Git Gutter (git changes)
hi GitGutterAdd    ctermbg=none ctermfg=002
hi GitGutterChange ctermbg=none ctermfg=220
hi GitGutterDelete ctermbg=none ctermfg=001
